1. Linux-常用命令
    * 网络相关指令
    * 在脚本中执行后台进程，会被挂到pid=1上去，但是在shell中执行后台进程，只会挂到当前的终端上
    * iowatcher
2. 进程
    * 进程父子进程，杀了父进程会怎么样，杀了子进程会怎么样
    * 进程如何创建，fork exec（机制和策略），机制是原子的操作（linux提供的系统调用）策略是将这些机制进行组合达到最终的目的
1. Kubernetes-Single-Master-Cluster
    * nginx ingress
1. helm
1. common-tools
	* 1. promise 注释问题
1. k8s java demo
1. spring
	* https://stackoverflow.com/questions/37052857/spring-overriding-one-application-property-from-command-line 启动覆盖配置文件中的参数
1. Netty EmbeddedChannel
	* how to close embeddedchannel properly and release buffers https://github.com/netty/netty/pull/9851
    * compositeBuffer
        * addCompoent 与 writeBytes 混用，会多处几个 `\u0000` 字符
    * converter迁移
	* ssl jks实例代码迁移到common-tools中
    * 如何感知netty channel的状态（我期望在channel处理完所有input以及ouput之后才close通道）
    * readInbound、readOutbound、writeInbound、writeOutbound画图
    * LEAK: ByteBuf.release() was not called before it's garbage-collected. See http://netty.io/wiki/reference-counted-objects.html for more information.
        * 原因，调了byteBuf.readBytes(length) 缺没有release

io.netty.buffer.PooledByteBufAllocator.newDirectBuffer(PooledByteBufAllocator.java:331)
	io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:185)
	io.netty.buffer.AbstractByteBufAllocator.buffer(AbstractByteBufAllocator.java:121)
	io.netty.buffer.AbstractByteBuf.readBytes(AbstractByteBuf.java:871)

LEAK: ByteBuf.release() was not called before it's garbage-collected. See http://netty.io/wiki/reference-counted-objects.html for more information.
Recent access records:
Created at:
io.netty.buffer.PooledByteBufAllocator.newDirectBuffer(PooledByteBufAllocator.java:331)
io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:185)
io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:176)
io.netty.buffer.AbstractByteBufAllocator.buffer(AbstractByteBufAllocator.java:113)
io.netty.handler.ssl.SslHandler.allocate(SslHandler.java:1914)
io.netty.handler.ssl.SslHandler.allocateOutNetBuf(SslHandler.java:1923)
io.netty.handler.ssl.SslHandler.wrap(SslHandler.java:822)
io.netty.handler.ssl.SslHandler.wrapAndFlush(SslHandler.java:793)
io.netty.handler.ssl.SslHandler.flush(SslHandler.java:774)
io.netty.handler.ssl.SslHandler.flush(SslHandler.java:1650)
io.netty.handler.ssl.SslHandler.closeOutboundAndChannel(SslHandler.java:1618)
io.netty.handler.ssl.SslHandler.close(SslHandler.java:732)
io.netty.channel.AbstractChannelHandlerContext.invokeClose(AbstractChannelHandlerContext.java:624)
io.netty.channel.AbstractChannelHandlerContext.close(AbstractChannelHandlerContext.java:608)
io.netty.channel.DefaultChannelPipeline.close(DefaultChannelPipeline.java:1040)
io.netty.channel.AbstractChannel.close(AbstractChannel.java:274)
io.netty.channel.embedded.EmbeddedChannel.close(EmbeddedChannel.java:550)
io.netty.channel.embedded.EmbeddedChannel.close(EmbeddedChannel.java:537)

2020-04-17 10:30:24.784 [ERROR] [nioEventLoopGroup-3-4] --- LEAK: ByteBuf.release() was not called before it's garbage-collected. See http://netty.io/wiki/reference-counted-objects.html for more information.
Recent access records:
Created at:
	io.netty.buffer.PooledByteBufAllocator.newDirectBuffer(PooledByteBufAllocator.java:331)
	io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:185)
	io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:176)
	io.netty.buffer.AbstractByteBufAllocator.buffer(AbstractByteBufAllocator.java:113)
	io.netty.handler.ssl.SslHandler.allocate(SslHandler.java:1914)
	io.netty.handler.ssl.SslHandler.allocateOutNetBuf(SslHandler.java:1923)
	io.netty.handler.ssl.SslHandler.wrap(SslHandler.java:822)
	io.netty.handler.ssl.SslHandler.wrapAndFlush(SslHandler.java:793)
	io.netty.handler.ssl.SslHandler.flush(SslHandler.java:774)
	io.netty.handler.ssl.SslHandler.flush(SslHandler.java:1650)
	io.netty.handler.ssl.SslHandler.closeOutboundAndChannel(SslHandler.java:1618)
	io.netty.handler.ssl.SslHandler.close(SslHandler.java:732)
	io.netty.channel.AbstractChannelHandlerContext.invokeClose(AbstractChannelHandlerContext.java:624)
	io.netty.channel.AbstractChannelHandlerContext.close(AbstractChannelHandlerContext.java:608)
	io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.close(CombinedChannelDuplexHandler.java:507)
	io.netty.channel.ChannelOutboundHandlerAdapter.close(ChannelOutboundHandlerAdapter.java:71)
	io.netty.channel.CombinedChannelDuplexHandler.close(CombinedChannelDuplexHandler.java:318)
	io.netty.channel.AbstractChannelHandlerContext.invokeClose(AbstractChannelHandlerContext.java:624)
	io.netty.channel.AbstractChannelHandlerContext.close(AbstractChannelHandlerContext.java:608)
	io.netty.channel.DefaultChannelPipeline.close(DefaultChannelPipeline.java:1040)
	io.netty.channel.AbstractChannel.close(AbstractChannel.java:274)
	io.netty.channel.embedded.EmbeddedChannel.close(EmbeddedChannel.java:550)
	io.netty.channel.embedded.EmbeddedChannel.close(EmbeddedChannel.java:537)
	com.aliyun.iotx.edge.tunnel.core.common.util.AbstractConverter.close(AbstractConverter.java:88)